version: '3'

tasks:

  default:
  - task: :helpers:validate
    vars:
      REQUIRED_TOOLS_LIST: kubectl,flux,jq,yq

  gpu-collect:
    silent: false
    deps: [default]
    desc: Gather common nvidia gpu resources in your cluster
    cmds:
    - kubectl get nodes -o='custom-columns=NodeName:.metadata.name,TaintKey:.spec.taints[*].key,TaintValue:.spec.taints[*].value,TaintEffect:.spec.taints[*].effect'
    - kubectl get cm time-slicing-config -n gpu-operator --ignore-not-found
    - kubectl get clusterpolicies.nvidia.co/cluster-policy -n gpu-operator -o jsonpath='{.spec.devicePlugin.config}}' && echo
    - kubectl get pod -n gpu-operator
    - kubectl get node -o json -l nvidia.com/gpu.present=true | jq '.items[].metadata.labels'
    - kubectl get pod -n gpu-operator -o name -l app=nvidia-driver-daemonset | xargs -I {} kubectl exec -n gpu-operator -i {} -c nvidia-driver-ctr -- nvidia-smi
    - kubectl top nodes -l nvidia.com/gpu.present=true --show-capacity
    #- kubectl get events -n gpu-operator --sort-by='.lastTimestamp'

  kyverno-collect:
    silent: true
    deps: [default]
    desc: Gather common kyverno resources in your cluster
    cmds:
    - kubectl get po,svc -n kyverno -o wide
    - kubectl get cpol,pol -A -o wide
    - kubectl get validatingwebhookconfigurations,mutatingwebhookconfigurations | grep -i kyverno
    - kubectl get cadmr,admr -A -o wide
    - kubectl get cbgscanr -o wide
    - 'echo "number of cluster admission reports: $(kubectl get cadmr --no-headers 2> /dev/null | wc -l)"'
    - 'echo "number of admission reports: $(kubectl get admr -A --no-headers 2> /dev/null | wc -l)"'
    - |
      NS_LIST=$(kubectl get ns -o jsonpath='{.items[*].metadata.name}')
      for ns in $NS_LIST
      do
        echo "number of admission reports in $ns: $(kubectl get -n $ns admr --no-headers 2> /dev/null | wc -l)"
      done
    - kubectl get events -n kyverno --sort-by='.lastTimestamp'

  ingress-collect:
    silent: false
    deps: [default]
    desc: Gather common ingress resources in your cluster
    cmds:
    - task: :kubectl:ingresses
    - task: :kubectl:certificates
    - task: :kubectl:services
    - task: :kubectl:endpoints

  flux-collect:
    silent: false
    deps: [default]
    desc: Gather common flux resources in your cluster
    cmds:
    - task: :kubectl:nodes
    - task: :kubectl:kustomizations
    - task: :kubectl:helmreleases
    - task: :kubectl:helmrepositories
    - task: :kubectl:gitrepositories
    - task: :kubectl:certificates
    - task: :kubectl:ingresses
    - task: :kubectl:services
    - task: :kubectl:pods
    - task: :flux:summary

  cert-manager-collect:
    silent: false
    deps: [default]
    desc: Gather resources managed by cert-maanger
    cmds:
    - kubectl get certificates.cert-manager.io {{.CLI_ARGS | default "-A"}}
    - kubectl get certificaterequests.cert-manager.io {{.CLI_ARGS | default "-A"}}
    - kubectl get clusterissuers.cert-manager.io
    - kubectl get orders.acme.cert-manager.io -A
    - kubectl get challenges.acme.cert-manager.io -A
    - kubectl get secrets {{.CLI_ARGS | default "-A"}} | grep -i tls
    - flux events --for Kustomization/cert-manager
    - flux events --for Kustomization/cert-manager-resource-configs
    - flux events --for HelmRelease/cert-manager
    - flux logs --kind=Kustomization --name=cert-manager --tail 10
    - flux logs --kind=HelmRelease --name=cert-manager --tail 10

  lets-encrypt-aws-collect:
    silent: false
    deps: [default]
    desc: Gather resources managed by lets-encrypt
    cmds:
    - kubectl get secret letsencrypt-aws-secret -n cert-manager -o yaml | yq .data
    - kubectl get secret cluster-secrets -n flux-system -o yaml | grep -i aws
    - kubectl get clusterissuer letsencrypt-issuer -o yaml | yq .spec
    - kubectl get clusterissuer letsencrypt-issuer -o yaml | yq .status
    - kubectl get helmrelease cert-manager -n flux-system -o yaml | yq .spec
    - kubectl get helmrelease cert-manager -n flux-system -o yaml | yq .status
    - kubectl get kustomization cert-manager -n flux-system -o yaml | yq .spec
    - kubectl get kustomization cert-manager -n flux-system -o yaml | yq .status.conditions

  kuberay-collect:
    silent: false
    deps: [default]
    desc: Gather common Kuberay resources in your cluster
    cmds:
    - kubectl get events --sort-by='.lastTimestamp'
    - kubectl get pod -n gpu-operator -o name -l app=nvidia-driver-daemonset | xargs -I {} kubectl exec -n gpu-operator -i {} -c nvidia-driver-ctr -- nvidia-smi
    - kubectl get po -l ray.io/node-type=head
    #{{.CLI_ARGS | default "-n default"}} 
    #ray.io/node-type=worker,ray.io/serve=true
