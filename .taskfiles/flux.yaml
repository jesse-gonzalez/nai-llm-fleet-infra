version: '3'

tasks:

  default:
  - task: :helpers:validate
    vars:
      REQUIRED_TOOLS_LIST: kubectl,flux,git,helm

  verify:
    silent: true
    deps: [default]
    desc: Verify flux meets the prerequisites
    cmds:
    - flux check --pre

  init:
    silent: false
    #deps: [verify]
    precondition:
    - test -d {{.PROJECT_DIR}}/clusters/{{.K8S_CLUSTER_NAME}}/platform
    cmds:
    - kubectl create ns flux-system --dry-run=client -o yaml | kubectl apply -f -
    - task: create-image-pull-secret
    - task: create-decrypt-secret
      ## pass in yes to ignore prompt to promote git commit
    - task flux:git-promote --yes
    - task: bootstrap
    - git pull origin --autostash
    - task: reconcile
    - 'echo "SUCCESS: Cluster (${K8S_CLUSTER_NAME}) has been successfully initialized. You can continue to monitor status by running task flux:watch"'
    requires:
      vars: [K8S_CLUSTER_NAME, GITHUB_TOKEN, GITHUB_USER, GITHUB_REPO, GITHUB_BRANCH]

  bootstrap:
    silent: false
    deps: [default]
    desc: Executes FluxCD Bootstrap against Target K8s Cluster
    cmds:
    - |
      export GITHUB_TOKEN=${GITHUB_TOKEN} && \
      flux bootstrap github \
        --owner=${GITHUB_USER} \
        --repository={{.GITHUB_REPO}} \
        --branch={{.GITHUB_BRANCH}} \
        --personal \
        --path=clusters/{{.K8S_CLUSTER_NAME}} \
        --token-auth \
        --force
    requires:
      vars: [K8S_CLUSTER_NAME, GITHUB_TOKEN, GITHUB_USER, GITHUB_REPO, GITHUB_BRANCH]

  git-promote:
    silent: false
    deps: [default]
    desc: Adds newly created cluster to git and pushes to remote branch
    precondition:
    - test -f {{.PROJECT_DIR}}/clusters/{{.K8S_CLUSTER_NAME}}/platform/cluster-secrets.sops.yaml
    - test -f {{.PROJECT_DIR}}/clusters/{{.K8S_CLUSTER_NAME}}/platform/cluster-configs.yaml
    - test -f {{.PROJECT_DIR}}/clusters/{{.K8S_CLUSTER_NAME}}/platform/kustomization.yaml
    prompt: "This will commit the code locally, push remotely and bootstrap the following cluster: {{.K8S_CLUSTER_NAME}}. Do you wish to continue?"
    cmds:
    - 'git add clusters/{{.K8S_CLUSTER_NAME}}'
    - 'git commit --quiet -am "add: cluster-configs for new cluster {{.K8S_CLUSTER_NAME}}"'
    - 'git pull origin --quiet --autostash'
    - 'export GITHUB_TOKEN=${GITHUB_TOKEN} && git push origin --quiet'
    requires:
      vars: [K8S_CLUSTER_NAME]

  create-decrypt-secret:
    silent: true
    deps: [default]
    desc: Create K8s secret with SOPS age key
    vars:
      SOPS_AGE_KEY_FILE: '{{.PROJECT_DIR}}/.local/_common/age.agekey'
    cmds:
    - |
      cat {{.SOPS_AGE_KEY_FILE}} |
      kubectl create secret generic sops-age \
        --namespace=flux-system \
        --from-file=age.agekey=/dev/stdin \
        --dry-run=client -o yaml | kubectl apply -f -
    preconditions:
    - sh: test -f {{.SOPS_AGE_KEY_FILE}}
      msg: |
        Age Key not found. Have you initialized local configs?
    requires:
      vars: [SOPS_AGE_KEY_FILE]

  create-image-pull-secret:
    silent: true
    deps: [default]
    desc: Create Docker Hub Pull Secret (docker-hub-regcred) in flux-system. Will be synced to specific namespace by kyverno via clusterpolicy.
    cmds:
    - |
      kubectl create secret docker-registry docker-hub-regcred \
        --docker-username=${DOCKER_HUB_USER} \
        --docker-password=${DOCKER_HUB_PASS} \
        --namespace=flux-system \
        --dry-run=client -o yaml | kubectl apply -f -
    requires:
      vars: [DOCKER_HUB_USER, DOCKER_HUB_PASS]

  reconcile:
    silent: true
    deps: [default]
    desc: Force update Flux to pull in changes from your Git repository
    cmds:
    - flux reconcile -n flux-system source git flux-system
    - flux reconcile -n flux-system kustomization flux-system

  summary:
    silent: true
    deps: [default]
    desc: Use to troubleshoot issues with flux resources
    cmds:
    - flux get all
    - flux stats

  watch:
    silent: true
    deps: [default]
    desc: Watch important flux resouces via kubectl
    cmds:
    - watch -n 1 "kubectl get gitrepo,helmrepo,hr,ks -n flux-system && echo && flux stats"
    interactive: true

  tree:
    silent: true
    deps: [default]
    desc: Show list of resources reconciled by a Flux object using the flux tree command.
    cmds:
    - flux tree kustomization {{.CLI_ARGS | default "flux-system"}}

  cleanup:
    silent: false
    deps: [default]
    desc: Cleanup flux resources from K8s Cluster
    cmds:
    - flux uninstall --dry-run
    requires:
      vars: [K8S_CLUSTER_NAME]

  trace-namespace:
    aliases: [tns]
    silent: false
    deps: [default]
    desc: Trace flux resources for given namespace
    vars:
      TARGET_NAMESPACE:
        sh: task bootstrap:gum -- choose --header "Which Namespace would you like to trace using flux?" $(kubectl get ns -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}')
    cmds:
    - flux trace namespace {{.TARGET_NAMESPACE}}
    interactive: true

  trace-kustomize:
    aliases: [tks]
    silent: false
    deps: [default]
    desc: Trace flux resources for given kustomization
    vars:
      TARGET_KUSTOMIZATION:
        sh: task bootstrap:gum -- choose --header "Which Namespace would you like to trace using flux?" $(kubectl get ks -n flux-system -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}')
    cmds:
    - flux trace kustomization {{.TARGET_KUSTOMIZATION}}
    interactive: true

  trace-helmrelease:
    aliases: [thr]
    silent: false
    deps: [default]
    desc: Trace flux resources for given kustomization
    vars:
      TARGET_HELMRELEASE:
        sh: task bootstrap:gum -- choose --header "Which Namespace would you like to trace using flux?" $(kubectl get ks -n flux-system -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}')
    cmds:
    - flux trace helmrelease {{.TARGET_HELMRELEASE}}
    interactive: true

